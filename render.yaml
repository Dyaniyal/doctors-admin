version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    command: sh -c "yarn install && yarn start"
    user: "${UID}:${GID}"
    restart: "no"
    env_file:
      - ".env"
    environment:
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    volumes:
      - ./frontend:/app

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    command: ["rails", "server", "--binding=0.0.0.0"]
    user: "${UID}:${GID}"
    restart: "no"
    env_file:
      - ".env"
    depends_on:
      - postgres
      - redis
    ports:
      - "3000:3000"
    volumes:
      - ./api:/app

  postgres:
    image: postgres:12.11-alpine
    env_file:
      - ".env"
    healthcheck:
      test:
        [
          "CMD", "pg_isready",
          "-q",
          "-d",
          "${POSTGRES_DB}",
          "-U",
          "${POSTGRES_USER}",
        ]
      retries: 3
      timeout: 5s

  redis:
    image: redis:7.0-alpine
    env_file:
      - ".env"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
